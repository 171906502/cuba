/*
 * Copyright (c) 2008-2016 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

@mixin flat-checkbox($primary-stylename: v-checkbox) {
  .#{$primary-stylename} {
    @include cuba-flat-checkbox-style($v-unit-size - 10);
  }

  &.small .#{$primary-stylename} {
    @include cuba-flat-checkbox-style($v-unit-size--small - 10);
    font-size: $v-font-size--small;
  }

  &.large .#{$primary-stylename} {
    @include cuba-flat-checkbox-style($v-unit-size--large - 10);
    font-size: $v-font-size--large;
  }
}

@mixin cuba-flat-checkbox-style($checkbox-size: $v-unit-size) {
  // Instead of accepting checkbox-size, the valo-checkbox-style mixin divides passed unit-size by 2.
  // Since we do not want the CheckBox to be half smaller, we need to provide twice the size.
  @include valo-checkbox-style($unit-size: $checkbox-size * 2);

  color: var(--text-medium-color);
  height: $checkbox-size;

  :root & {
    padding-left: round($checkbox-size * 1.66);
  }

  :root & > input {
    & ~ label:before {
      @include box-shadow(none);

      background: transparent;
      border-color: var(--border-color);
      border-width: 2px;
    }

    & ~ label:before,
    & ~ label:after {
      border-radius: ceil($v-border-radius / 2);
    }

    &:checked {
      & ~ label:before {
        border-color: var(--primary-color);
      }

      & ~ label:after {
        color: var(--primary-color);
      }
    }

    &:focus ~ label:before {
      @include box-shadow(none);

      border-color: var(--border-color);
      background: var(--read-only-border-color);
    }

    &:focus:checked  ~ label:before {
      border-color: var(--primary-color);
      background: var(--primary-disabled-color);
    }
  }

  &.v-readonly,
  &.v-disabled {
    :root & > input {
      & ~ label:before {
        border-color: var(--read-only-border-color);
      }

      &:checked ~ label:after {
        color: var(--read-only-border-color);
        opacity: 1;
      }
    }
  }

  &.v-disabled {
    color: var(--read-only-border-color);

    :root & > input ~ label {
      opacity: 1;
    }
  }
}